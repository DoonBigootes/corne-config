/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <0 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp MINUS
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp LEFT_ALT
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp BSPC
            >;
        };

        num_and_symbols_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "num&symbols";
            bindings = <
&kp TAB           &kp EXCLAMATION  &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp LCTRL       &kp AMPERSAND  &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BSLH
&kp LEFT_CONTROL  &kp N1           &kp N2  &kp N3    &kp N4      &kp N5         &kp MINUS       &kp EQUAL      &kp APOS       &kp LBKT              &kp RBKT               &kp PIPE
&kp LSHFT         &kp N6           &kp N7  &kp N8    &kp N9      &kp N0         &kp UNDERSCORE  &kp PLUS       &kp TILDE      &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LEFT_ALT
                                           &kp LGUI  &trans      &kp SPACE      &kp RET         &trans         &kp BACKSPACE
            >;
        };

        navegation_layer {
            bindings = <
&kp TAB  &trans  &trans          &mmv MOVE_UP     &trans           &msc SCRL_UP      &kp C_VOLUME_UP    &trans      &kp UP            &trans     &trans  &kp PAGE_UP
&trans   &trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN   &mmv MOVE_RIGHT  &msc SCRL_DOWN    &kp C_VOLUME_DOWN  &kp LEFT    &kp DOWN          &kp RIGHT  &trans  &kp PAGE_DOWN
&trans   &trans  &msc SCRL_LEFT  &msc SCRL_RIGHT  &mkp LCLK        &mkp RCLK         &kp C_PREV         &kp C_NEXT  &kp C_PLAY_PAUSE  &trans     &trans  &trans
                                 &trans           &trans           &trans            &trans             &trans      &trans
            >;
        };

        command_layer {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        &kp F7     &kp F8  &kp F9    &kp F10  &kp F11  &kp F12
&trans        &trans        &trans        &trans        &trans        &trans        &trans     &trans  &trans    &trans   &trans   &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR    &trans     &trans  &trans    &trans   &trans   &kp LEFT_ALT
                                          &kp LGUI      &trans        &kp SPACE     &kp ENTER  &trans  &kp BSPC
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Third_Layer {
            if-layers = <1 3 0>;
            then-layer = <3>;
        };
    };
};
